
/*또는 숫자가 아닌 문자가 포함된 데이터를 찾으려면: */
SELECT *
FROM USER_DATA
WHERE REGEXP_LIKE(ID, '[^0-9]');

설명:

    [0-9]: 숫자 범위를 나타냅니다.
    [^0-9]: 숫자가 아닌 문자(숫자 이외의 모든 문자)를 나타냅니다.
    REGEXP_LIKE(컬럼명, '[^0-9]'): 컬럼 값에 숫자가 아닌 문자가 하나라도 포함되어 있는 데이터를 찾습니다.

/* 이 쿼리는 PHONE_NUMBER 열에 숫자로만 이루어진 데이터만 반환합니다. */
SELECT *
FROM USER_DATA
WHERE REGEXP_LIKE(PHONE_NUMBER, '^[0-9]+$');

설명:

    ^: 문자열의 시작을 의미합니다.
    [0-9]: 숫자(0부터 9까지)를 나타냅니다.
    +: 앞에 있는 패턴이 한 번 이상 반복됨을 의미합니다.
    $: 문자열의 끝을 의미합니다.



SELECT *
FROM 테이블명
WHERE REGEXP_LIKE(전화번호, '^0\d{1,2}-?\d{3,4}-?\d{4}$');


한국 전화번호 정규 표현식 (일반적인 형식)    
^0\d{1,2}-?\d{3,4}-?\d{4}$
설명:

    ^: 문자열의 시작.
    0: 전화번호는 0으로 시작.
    \d{1,2}: 지역 번호는 1~2자리 숫자 (02, 031 등).
    -?: 하이픈은 선택적으로 포함.
    \d{3,4}: 중간 번호는 3~4자리 숫자.
    \d{4}: 마지막 번호는 4자리 숫자.
    $: 문자열의 끝.

예:

    010-1234-5678
    02-123-4567
    0311234567    


SELECT *
FROM 테이블명
WHERE REGEXP_LIKE(전화번호, '^\+?82-?0?\d{1,2}-?\d{3,4}-?\d{4}$');


국제 전화번호 포함

^\+?82-?0?\d{1,2}-?\d{    
    설명:

    ^\+?: '+' 기호가 선택적으로 포함될 수 있음.
    82: 국가 코드 (한국).
    -?: 하이픈은 선택적.
    0?: 국가 번호 뒤의 '0'은 선택적으로 포함.
    나머지는 한국 전화번호 형식과 동일.

예:

    +82-10-1234-5678
    +82-2-123-4567    

SELECT *
FROM 테이블명
WHERE NOT REGEXP_LIKE(전화번호컬럼, '^[0-9+\-()\s]+$');

잘못된 형식 조회

^[0-9+\-()\s]+$:

    ^: 문자열의 시작.
    [0-9+\-()\s]: 숫자(0-9), +, -, (, ) 또는 공백(\s) 중 하나를 허용.
    +: 위 조건이 한 번 이상 반복됨.
    $: 문자열의 끝.


-- 해당 SQL 쿼리는 문자열에서 정규 표현식을 사용하여 다양한 작업을 수행하는 방법을 보여줍니다. 
-- 이 쿼리는 특히 Oracle 데이터베이스에서 실행되도록 설계되었습니다. 각 작업의 결과는 다음과 같습니다:

--     REGEXP_REPLACE('10,10,10,10,20,30,40,50', '([^,]+)(,\1)*(,|$)', '\1\3') AS deduplicated_values: 
--    이 함수는 문자열에서 중복된 숫자를 제거합니다. 여기서 '10,10,10,10,20,30,40,50' 문자열에 대해 실행되면
--    중복된 '10'들이 하나의 '10'으로 줄어들어 결과적으로 '10,20,30,40,50'이 반환됩니다.

--     REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '([^,]+)') AS first_value: 이 함수는 문자열에서 첫 번째 숫자를 찾습니다. 결과는 '10'이 됩니다.

--     REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '([^,]+)(,\1)*') AS first_repeated_series: 이 작업은 첫 번째로 반복되는 숫자 시리즈를 찾으려고 시도합니다. 
--    하지만 REGEXP_SUBSTR 함수는 반복되는 패턴을 하나의 결과로 합치지 않으므로, 이 경우에도 '10'만 찾아 반환합니다.

--     REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '(,|$)') AS first_comma_or_end: 이 함수는 문자열에서 첫 번째 쉼표 또는 문자열의 끝을 찾습니다. 
--      첫 번째 매치는 쉼표이므로 결과는 ','입니다.

--     FROM dual은 Oracle에서 단일 행을 반환하는 데 사용되는 더미 테이블입니다. 이 쿼리는 데이터베이스에 테이블이 필요하지 않을 때 유용합니다.
--     각 작업은 문자열 처리와 정규 표현식을 사용하여 데이터를 변형하는 다양한 방법을 보여줍니다. 이러한 작업은 데이터 정제, 변환, 추출 과정에서 매우 유용할 수 있습니다.
SELECT 
  REGEXP_REPLACE('10,10,10,10,20,30,40,50', '([^,]+)(,\1)*(,|$)', '\1\3') AS deduplicated_values,
  REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '([^,]+)') AS first_value,
  REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '([^,]+)(,\1)*') AS first_repeated_series,
  REGEXP_SUBSTR('10,10,10,10,20,30,40,50', '(,|$)') AS first_comma_or_end
FROM dual
